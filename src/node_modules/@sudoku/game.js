import { cursor } from './stores/cursor';
import { difficulty } from './stores/difficulty';
import { gamePaused } from './stores/game';
import { grid } from './stores/grid';
import { timer } from './stores/timer';
import { hints } from './stores/hints';
import { encodeSudoku } from './sencode';

/**
 * Start new game with a generated sudoku
 *
 * @param {('veryeasy' | 'easy' | 'medium' | 'hard')} diff - Difficulty
 */
export function startNew(diff) {
	difficulty.set(diff);
	grid.generate(diff);
	cursor.reset();
	timer.reset();
	hints.reset();

	location.hash = '';
}

/**
 * Start new game with a custom sudoku
 *
 * @param {string} sencode - Sencode to decode
 */
export function startCustom(sencode) {
	difficulty.setCustom();
	grid.decodeSencode(sencode);
	cursor.reset();
	timer.reset();
	hints.reset();
}

/**
 * Pause the game
 */
export function pauseGame() {
	timer.stop();
	gamePaused.set(true);
}

/**
 * Resume (un-pause) the game
 */
export function resumeGame() {
	timer.start();
	gamePaused.set(false);
}

export async function getFromWeb() {
  try {
    const apiUrl = 'https://sudoku-api.vercel.app/api/dosuku';
    const response = await fetch(apiUrl);
    if (!response.ok) throw new Error('API请求失败');
    const data = await response.json();

    // 取第一个题目
    const gridx = data.newboard.grids[0].value;
    // 你可以直接用grid初始化你的数独
    // 例如：encodeSudoku(grid) + grid.decodeSencode(sencode)
    const sencode = encodeSudoku(gridx);
    grid.decodeSencode(sencode);
    cursor.reset();
    timer.reset();
    hints.reset();
    difficulty.setCustom();
    console.log('成功获取数独题目');
    return true;
  } catch (e) {
    console.error('获取数独题目失败:', e);
    throw e;
  }
}


export default {
	startNew,
	startCustom,
	pause: pauseGame,
	resume: resumeGame,
	getFromWeb
};