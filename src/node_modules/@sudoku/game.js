import { cursor } from './stores/cursor';
import { difficulty } from './stores/difficulty';
import { gamePaused } from './stores/game';
import { grid } from './stores/grid';
import { timer } from './stores/timer';
import { hints } from './stores/hints';
import { json2grid } from './transformer';
import { encodeSudoku } from './sencode';
import { solveSudoku } from './sudoku';

/**
 * Start new game with a generated sudoku
 *
 * @param {('veryeasy' | 'easy' | 'medium' | 'hard')} diff - Difficulty
 */
export function startNew(diff) {
	difficulty.set(diff);
	grid.generate(diff);
	cursor.reset();
	timer.reset();
	hints.reset();

	location.hash = '';
}

/**
 * Start new game with a custom sudoku
 *
 * @param {string} sencode - Sencode to decode
 */
export function startCustom(sencode) {
	difficulty.setCustom();
	grid.decodeSencode(sencode);
	cursor.reset();
	timer.reset();
	hints.reset();
}

/**
 * Pause the game
 */
export function pauseGame() {
	timer.stop();
	gamePaused.set(true);
}

/**
 * Resume (un-pause) the game
 */
export function resumeGame() {
	timer.start();
	gamePaused.set(false);
}

export async function getFromWeb(name) {
  // 获取题库数据
  const res = await fetch('/all_sudoku_examples.json');
  const allExamples = await res.json();
  const str = allExamples[name];
  if (!str) throw new Error('题目不存在');
  // 字符串转grid
  const grid = json2grid(str);
  // grid转sencode
  const sencode = encodeSudoku(grid);
  // 调试输出
  console.log('getFromWeb调试:', { name, str, grid, sencode });
  const solution = solveSudoku(grid);
  console.log('标准答案:', solution);
  // 设置游戏
  startCustom(sencode);
}


export default {
	startNew,
	startCustom,
	pause: pauseGame,
	resume: resumeGame,
	getFromWeb
};